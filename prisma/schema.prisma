generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------------- AUTH MODELS ----------------

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  accounts      Account[]
  sessions      Session[]
  products      Product[]  // âœ… One user can have multiple product instances
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?   @db.Text
  access_token       String?   @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?   @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// ---------------- PRODUCT CORE ----------------

model Product {
  id        String      @id @default(cuid())
  name      String
  type      ProductType
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  createdAt DateTime    @default(now())

  projects  Project[]
  customers Customer[]
  tickets   Ticket[]
  features  DevFeature[]
}

enum ProductType {
  WORK_MANAGEMENT
  CRM
  DEV
  SERVICE
}

// ---------------- MODULE 1: Work Management ----------------

model Project {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())

  productId String
  product   Product  @relation(fields: [productId], references: [id])

  tasks     Task[]
}

model Task {
  id         String   @id @default(cuid())
  title      String
  done       Boolean  @default(false)
  createdAt  DateTime @default(now())

  projectId  String
  project    Project  @relation(fields: [projectId], references: [id])
}

// ---------------- MODULE 2: CRM ----------------

model Customer {
  id        String   @id @default(cuid())
  name      String
  email     String?
  phone     String?
  createdAt DateTime @default(now())

  productId String
  product   Product  @relation(fields: [productId], references: [id])
}

// ---------------- MODULE 3: Service ----------------

model Ticket {
  id        String   @id @default(cuid())
  title     String
  status    String   @default("open")
  createdAt DateTime @default(now())

  productId String
  product   Product  @relation(fields: [productId], references: [id])
}

// ---------------- MODULE 4: Dev ----------------

model DevFeature {
  id        String   @id @default(cuid())
  title     String
  status    String   @default("pending")
  createdAt DateTime @default(now())

  productId String
  product   Product  @relation(fields: [productId], references: [id])
}
